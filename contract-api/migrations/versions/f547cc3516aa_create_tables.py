"""create tables

Revision ID: f547cc3516aa
Revises: 
Create Date: 2022-11-27 15:01:48.516119

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f547cc3516aa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('organization_id', postgresql.UUID(), nullable=False),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('prefecture_code', sa.String(), nullable=True),
    sa.Column('city_ward_name', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('building_name', sa.String(), nullable=True),
    sa.Column('room_number', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'user_id', 'organization_id')
    )
    op.create_table('car_master',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('car_type_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('vehicle_model', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('insurance_master',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('insurance_type_id', postgresql.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'insurance_type_id')
    )
    op.create_table('organization_master',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('organization_type_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organization_master_organization_type_id'), 'organization_master', ['organization_type_id'], unique=True)
    op.create_table('type_master',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('level1_id', sa.Integer(), nullable=True),
    sa.Column('group_name_level_1', sa.String(), nullable=True),
    sa.Column('level2_id', sa.Integer(), nullable=True),
    sa.Column('group_name_level_2', sa.String(), nullable=True),
    sa.Column('level3_id', sa.Integer(), nullable=True),
    sa.Column('group_name_level_3', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('value1', sa.String(), nullable=True),
    sa.Column('value2', sa.String(), nullable=True),
    sa.Column('value3', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('type_master')
    op.drop_index(op.f('ix_organization_master_organization_type_id'), table_name='organization_master')
    op.drop_table('organization_master')
    op.drop_table('insurance_master')
    op.drop_table('car_master')
    op.drop_table('addresses')
    # ### end Alembic commands ###
